/*
 * File: formMaximosMinimos.js
 * Date: Mon Apr 17 2017 23:22:08 GMT-0600 (Hora verano, Montañas (México))
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */
Ext.ns('miErpWeb');
Ext.ns('mew');
formMaximosMinimos = Ext.extend(formMaximosMinimosUi, {
	id_producto: 0,
	indexDetalle: 0,
	edicionDetalle:false,
	inicializarStores:function(){
		this.cmbAlmacen.store =  new miErpWeb.storeFormMaximosMinimosAlmacenes();		
		this.cmbLinea.store =  new miErpWeb.storeFormMaximosMinimosLineas();
		this.cmbProducto.store =  new miErpWeb.storeFormMaximosMinimosProductos();
		
		this.cmbProductoDetalle.store =  new miErpWeb.storeFormMaximosMinimosProductos();
		
		this.gridDetalles.store = new miErpWeb.storeFormMaximosMinimosGrid();		
		
	},
	inicializarEvents:function(){
		
		this.cmbAlmacen.addListener('beforequery',function(qe){
			delete qe.combo.lastQuery; 	//PARA QUE SIEMPRE REALICE LA CONSULTA AL SERVIDOR
		},this);
		
		this.cmbLinea.addListener('beforequery',function(qe){
			delete qe.combo.lastQuery; 	//PARA QUE SIEMPRE REALICE LA CONSULTA AL SERVIDOR
		},this);
		
		this.cmbProducto.addListener('beforequery',function(qe){
			delete qe.combo.lastQuery; 	//PARA QUE SIEMPRE REALICE LA CONSULTA AL SERVIDOR
		},this);
		
		this.cmbProductoDetalle.addListener('beforequery',function(qe){
			delete qe.combo.lastQuery; 	//PARA QUE SIEMPRE REALICE LA CONSULTA AL SERVIDOR
		},this);
		
		this.gridDetalles.on("cellclick", function(Grid, rowIndex, columnIndex, e){
				var record = this.gridDetalles.getStore().getAt(rowIndex);
				this.indexDetalle = rowIndex;
				this.id_producto = record.data.id_producto;			
				this.cmbProductoDetalle.setValue(record.data.id_producto);
				this.cmbProductoDetalle.setRawValue(record.data.descripcion);
				this.txtMinimo.setValue(Ext.util.Format.number(record.data.stock_min,'0.00'));
				this.txtMaximo.setValue(Ext.util.Format.number(record.data.stock_max,'0.00'));
				this.txtMinimo.focus(true, 0);
				
			
			}, this);
		
		this.cmbProductoDetalle.updateAlways = true;
		
		this.btnAgregar.on('click',function(){
			this.agregarProducto();
		}, this);
		
		this.txtMinimo.on('specialkey',function(txt,e){
			if (e.getCharCode()==e.ENTER){
				this.txtMaximo.focus(true,0);
			}			
		},this);
		
		this.txtMaximo.on('specialkey',function(txt,e){
			if (e.getCharCode()==e.ENTER){
				this.btnAgregar.focus(true,0);
			}			
		},this);
		
		
		
		this.txtMinimo.setValue=function(value){
			if (value!=''){
				value=miErpWeb.formatearMoneda(value);
			}			
			Ext.form.TextField.prototype.setValue.apply(this,arguments);
		};
		
		this.txtMaximo.setValue=function(value){
			if (value!=''){
				value=miErpWeb.formatearMoneda(value);
			}			
			Ext.form.TextField.prototype.setValue.apply(this,arguments);
		};
		
		// this.cmbCliente.on('select',function(combo, record, index){
			// this.foraneo = record.get('foraneo');	

			//this.calcularTotales();	
		// }, this);
		
		this.cmbProducto.getStore().on('beforeload',function(){
			this.cmbProducto.store.baseParams.id_linea= Ext.num(this.cmbLinea.getValue(), 0);
		},this);
		
		var me = this;
		
		this.cmbLinea.onTriggerClick = function(a, e){
			if(e){
				if(e.getAttribute('class').indexOf('x-form-clear-trigger') > -1){
					if(this.isExpanded()){
						this.collapse();
						this.el.focus();
					}
					if(!Ext.isEmpty(me.cmbLinea.getValue())){
						this.reset();
						me.cmbProducto.clearValue();
						// this.deshabilitarBtns(true);
						// this.cntActivo.setVisible(false);
						// this.spExcel.setVisible(false);
						//this.reloadGrid(null, 0);
					}
				}else{
					if(this.readOnly || this.disabled){
						return;
					}
					if(this.isExpanded()){
						this.collapse();
						this.el.focus();
					}else {
						this.onFocus({});
						if(this.triggerAction == 'all') {
							this.doQuery(this.allQuery, true);
						} else {
							this.doQuery(this.getRawValue());
						}
						this.el.focus();
					}
				} 
			}
		};
		
		this.cmbProducto.onTriggerClick = function(a, e){
			if(e){
				if(e.getAttribute('class').indexOf('x-form-clear-trigger') > -1){
					if(this.isExpanded()){
						this.collapse();
						this.el.focus();
					}
					if(!Ext.isEmpty(me.cmbProducto.getValue())){
						this.reset();
						
						// this.deshabilitarBtns(true);
						// this.cntActivo.setVisible(false);
						// this.spExcel.setVisible(false);
						//this.reloadGrid(null, 0);
					}
				}else{
					if(this.readOnly || this.disabled){
						return;
					}
					if(this.isExpanded()){
						this.collapse();
						this.el.focus();
					}else {
						this.onFocus({});
						if(this.triggerAction == 'all') {
							this.doQuery(this.allQuery, true);
						} else {
							this.doQuery(this.getRawValue());
						}
						this.el.focus();
					}
				} 
			}
		};
		
		this.cmbLinea.on('select',function(combo, record, index){
			this.cmbProducto.clearValue();
		},this);
		
		this.btnFiltros.on('click', function(){
			if (this.frmMain.getForm().isValid() == false) return;

			if (this.pnlFiltros.disabled == true){
					this.desaplicarFiltros();				
			}
			else
				this.cargarProductos();
		}, this);
		
		this.btnGuardar.on('click', function(){
			this.guardar();
		}, this );
		
			
	},
	inicializarRenders:function(){
		var colMod=this.gridDetalles.getColumnModel();
		
		var column=colMod.getColumnById("colMinimo");
		column.renderer=function(val){
			return Ext.util.Format.cantidadConSeparadorDeMiles(val);
		};	
		
		var column=colMod.getColumnById("colMaximo");
		column.renderer=function(val){
			return Ext.util.Format.cantidadConSeparadorDeMiles(val);
		};	
		
		this.cmbAlmacen.tpl = new Ext.XTemplate(
			'<tpl for=".">'+
				'<div class="x-combo-list-item">'+
					'<div><b>{nombre_almacen}</b></div>'+
					'<div><b>{nombre_sucursal}</b></div>'+
					'<div><i>{nombre_empresa}</i></div>'+
				'</div>'+
			'</tpl>'
		);
				
	},
	initComponent: function() {
		formMaximosMinimos.superclass.initComponent.call(this);
		
		this.inicializarStores();
		this.inicializarEvents();
		this.inicializarRenders();
	},
	cargarProductos: function(){
		if(this.frmMain.getForm().isValid() == true){
			//this.mascara();
			this.el.mask('Cargando...');
			this.gridDetalles.store.removeAll()
			
			Ext.Ajax.request({
				scope: this,
				url: 'app.php/productos/obtenerproductosmm',
				params: {
					ID_Almacen: Ext.num(this.cmbAlmacen.getValue(),0),
					ID_Linea: Ext.num(this.cmbLinea.getValue(),0),
					ID_Producto: Ext.num(this.cmbProducto.getValue(),0)
				},
				success: function(data, options){
					var respuesta = Ext.decode(data.responseText);
					
					if(respuesta.success==true){
						
						//despues de la peticion
						this.pnlFiltros.disable();
						this.btnFiltros.setIcon('images/iconos/edit.png')
						this.btnFiltros.setText('Modificar Filtros')
						this.frmDetalles.getForm().reset();
						this.frmDetalles.enable();
						
						var productos=respuesta.data.Productos;
						if(productos!=undefined){			
							this.gridDetalles.store.loadData({
								data:productos
							});
						}	
						this.el.unmask();	
						//this.gridDetalles.store.load();
					} else {
							Ext.Msg.alert('Aviso', 'No existen productos con esos parametros.', function(){
								this.id_producto = 0;	
								
							}, this);
						this.el.unmask();	
					}					
				}
				
			});
			
			
					
		}
		
	},
	desaplicarFiltros: function(){
	
		this.pnlFiltros.enable();
		this.frmDetalles.getForm().reset();
		this.frmDetalles.disable();

		this.btnFiltros.setIcon('images/iconos/accept.png');
		this.btnFiltros.setText('Aplicar Filtros');

		this.gridDetalles.store.removeAll();
		
	},
	agregarProducto: function(){
		if(this.cmbProductoDetalle.getRawValue()==""){
				Ext.Msg.alert('Aviso', 'Seleccione el Producto.', function(){
					this.btnAgregar.enable();					
				}, this);
				return;
			}
			
			if (!this.frmDetalles.getForm().isValid()) {	//<---Si hay errores informa al usuario
			  Ext.Msg.show({
				   title:'Error al agregar el Producto',
				   msg: 'Por favor revise los campos marcados',
				   buttons: Ext.Msg.OK,
				   fn: function(){
						
				   },			   
				   scope:this,
				   icon: Ext.MessageBox.WARNING
				});			
				return false;
			}
			
			var min = Ext.num(this.txtMinimo.getValue(),0);
			var max = Ext.num(this.txtMaximo.getValue(),0);
		
			var id_producto = this.id_producto;
						
			var detalles = this.gridDetalles.getStore().getRange();
			indexDetalle = detalles.length;
			
			for(var x = 0; x<detalles.length; x++){
				if(detalles[x].data.id_producto == id_producto){
				
					indexDetalle = x;
							
				}	
			}
			
			var record = this.gridDetalles.getStore().getAt(indexDetalle);
			record.set("stock_min",min);
			record.set("stock_max",max);
			this.gridDetalles.getStore().commitChanges();				
			
			this.frmDetalles.getForm().reset();
			//this.cmbProducto.setDisabled(false);
			//this.cmbProducto.focus(true, 0);
			this.id_producto = 0;
			var nextIndexDetalle = indexDetalle + 1;
			
			if(nextIndexDetalle == detalles.length)
				nextIndexDetalle = 0;
			
			this.gridDetalles.getSelectionModel().selectRow(nextIndexDetalle);
			
			record = this.gridDetalles.getStore().getAt(nextIndexDetalle);
			this.indexDetalle = nextIndexDetalle;
			this.id_producto = record.data.id_producto;			
			this.cmbProductoDetalle.setValue(record.data.id_producto);
			this.cmbProductoDetalle.setRawValue(record.data.descripcion);
			this.txtMinimo.setValue(Ext.util.Format.number(record.data.stock_min,'0.00'));
			this.txtMaximo.setValue(Ext.util.Format.number(record.data.stock_max,'0.00'));
			this.txtMinimo.focus(true, 0);
			
			//this.indexDetalle = 0;			
		
	},
	guardar:function(){
		if (this.frmMain.getForm().isValid()){
			var productos=gridToJson(this.gridDetalles);
			
			var params={};
			//params['Movimiento[id_empresa]'] = this.txtIdMovimientoAlmacen.getValue();
			// params['Remision[id_empresa]'] = miErpWeb.Empresa[0].id_empresa;
			// params['Remision[id_sucursal]'] = miErpWeb.Sucursal[0].id_sucursal;
			// params['Remision[id_almacen]'] = miErpWeb.Almacen[0].id_almacen;
			

			params['Productos']=productos;
			
			this.el.mask('Guardando...');
			this.frmMain.getForm().submit({
				params:params,
				scope:this,
				url:'app.php/productos/guardarmaximosminimos',
				success:function(){
					this.el.unmask();
					this.id_producto = 0;
					this.indexDetalle = 0;
					
					this.desaplicarFiltros();
					
				},
				failure:function(form, action){
					switch (action.failureType) {
		            case Ext.form.Action.CLIENT_INVALID:		                
		                msg="Favor de revisar los campos marcados";
		                icon=Ext.MessageBox.WARNING;
		                break;
		            case Ext.form.Action.CONNECT_FAILURE:		                
		                msg="Error en la comunicación ajax, intente de nuevo";
		                icon=Ext.MessageBox.ERROR;
		                break;
		            case Ext.form.Action.SERVER_INVALID:
		                icon=Ext.MessageBox.ERROR;
		                msg=action.result.msg;
					}
					Ext.Msg.show({
					   title:'Error',
					   msg: msg,
					   buttons: Ext.Msg.OK,						  						   
					   icon: icon
					});
					}
				});
				
			
		}else{
			return;
			
		}	
		
		
	}
});
Ext.reg('formMaximosMinimos', formMaximosMinimos);