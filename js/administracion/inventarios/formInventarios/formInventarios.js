/*
 * File: formInventarios.js
 * Date: Mon Apr 17 2017 23:22:08 GMT-0600 (Hora verano, Montañas (México))
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */
Ext.ns('miErpWeb');
Ext.ns('mew');
formInventarios = Ext.extend(formInventariosUi, {
	id_producto:0,
	inicializarStores:function(){
		this.cmbSerie.store =  new miErpWeb.storeFormInventariosSeries();
		
		this.cmbProducto.store =  new miErpWeb.storeFormInventariosProductos();
		
		this.gridDetalles.store = new miErpWeb.storeFormInventariosGrid();
		
		
	},
	inicializarEvents:function(){
		
		this.frmMain.on('actioncomplete',function(form,action){
			 if (action.result.success){
				 this.cargarDatos(action.result.data);
				 
			 }else{				
				return false;
			}			
		}, this);	
		
		
		this.cmbProducto.updateAlways = true;
		
		this.cmbProducto.on("keydown", function(cmb, e){
				if(e.getKey()==13){
					this.id_producto = 0;
					this.aceptaProducto();
				}
			}, this);
		 this.txtConceptoInventario.setValue=function(value){
			value=miErpWeb.formatearTexto(value);
        	Ext.form.TextField.prototype.setValue.apply(this,arguments);
        	//this.cambioDeNombre(value);
			this.fireEvent('cambioDeNombre',value);
		}; 
				
		this.txtConteo.on('blur',function(){
			var stock = this.txtStock.getValue();
			var conteo = this.txtConteo.getValue();
			
						
			this.calcularConcepto(conteo,stock);
		}, this);	
		
		this.btnAgregar.on('click',function(){
			if(this.cmbProducto.getRawValue()==""){
				Ext.Msg.alert('Aviso', 'Capture el Producto.', function(){
					this.btnAgregar.enable();
					this.cmbProducto.focus(false, true);
				}, this);
				return;
			}
			
			if (!this.frmDetalles.getForm().isValid()) {	//<---Si hay errores informa al usuario
			  Ext.Msg.show({
				   title:'Error al agregar el Producto',
				   msg: 'Por favor revise los campos marcados',
				   buttons: Ext.Msg.OK,
				   fn: function(){
						this.cmbProducto.focus();
						this.cmbProducto.allowBlank=true;
				   },			   
				   scope:this,
				   icon: Ext.MessageBox.WARNING
				});			
				return false;
			}
			
			var cont = this.txtConteo.getValue();
			var sto = this.txtStock.getValue();
			
						
			this.calcularConcepto(cont,sto);
			
			var id_producto = this.id_producto;
			var existe = false;
			var indexDetalle = 0;
			var conteo = 0;
			
			
			
			
			var detalles = this.gridDetalles.getStore().getRange();
			indexDetalle = detalles.length;
			
			for(var x = 0; x<detalles.length; x++){
				if(detalles[x].data.id_producto == id_producto){
					existe = true;
					indexDetalle = x;
					conteo = detalles[x].data.conteo;
						
				}	
			}
			
			if(existe == false){
				var record = new this.gridDetalles.store.recordType({
					id_producto: this.id_producto,
					descripcion: this.cmbProducto.getRawValue(), 
					stock: this.txtStock.getValue(),
					conteo: this.txtConteo.getValue(),
					diferencia: this.txtDiferencia.getValue()
					
				}, Ext.id());
				
				this.gridDetalles.getStore().insert(0,record);
					
			}else{
				var record = this.gridDetalles.getStore().getAt(indexDetalle);
				var cont = conteo + this.txtConteo.getValue();
				var sto = this.txtStock.getValue();
				var dif= cont - sto;
								
				record.set("conteo",cont);
				record.set("stock",sto);
				record.set("diferencia",dif);
															
				this.gridDetalles.getStore().commitChanges();				
			}
			
			this.frmDetalles.getForm().reset();
			this.cmbProducto.focus(true, 0);
			this.id_producto = 0;			
		}, this);
		
		this.gridDetalles.getColumnModel().getColumnById("colDelete").renderer = function(v, m, rec){
			value = "<img class='btnEliminarDetalle' src='images/iconos/grid_chico_borrar.png' style='cursor:pointer;' />";
			return value;
		}
		
		this.gridDetalles.on("cellclick", function(Grid, rowIndex, columnIndex, e){
			var imgEl = Ext.get(e.getTarget());

			if(imgEl.hasClass("btnEliminarDetalle")){
				var record = this.gridDetalles.getStore().getAt(rowIndex);

				Ext.MessageBox.show({
					scope: this,
					title: "Aviso",
					msg: "Est&aacute; seguro de eliminar este detalle?",
					width: 320,
					buttons: Ext.Msg.YESNO,
					fn: function(btn){
						if(btn == "yes"){
							this.gridDetalles.getStore().removeAt(rowIndex);
							this.gridDetalles.getSelectionModel().selectRow(0);
							this.cmbProducto.focus(false, true);
							
						}else{
							this.cmbProducto.focus(false, true);	
						}
						
					}
				});
				
							
				
			}
				
		}, this);
		
		this.txtConteo.on('specialkey',function(txt,e){
			if (e.getCharCode()==e.ENTER){
				this.btnAgregar.focus(true,0);
			}			
		},this);
		
		this.txtConteo.setValue=function(value){
			if (value!=''){
				value=miErpWeb.formatearMoneda(value);
			}			
			Ext.form.TextField.prototype.setValue.apply(this,arguments);
		};
		
		this.cmbSerie.on('select',function(combo, record, index){
			this.txtFolio.setValue(record.get('foliosig'));				
		}, this);
		
		this.on('cambioDeId',function(params){	
			var id=params.id;
			if (id==0){
				this.btnGuardar.setIcon('images/iconos/'+this.iconMaster+'_add.png');
			}else if (id>0){
				this.btnEliminar.setDisabled(false);
				//this.btnDesactivar.setDisabled(false);
				this.btnGuardar.setIcon('images/iconos/'+this.iconMaster+'_edit.png');
			}			
		},this);
		var me = this;
		this.cmbProducto.onTriggerClick = function(){
				
				this.busquedaProducto = new formMovimientosAlmacenWinProductos();
				this.busquedaProducto.show();
				
				this.busquedaProducto.on("productoSeleccionado", function(Id){
					
					me.id_producto = Id;
					me.cmbProducto.setValue('');
					me.aceptaProducto();
				}, this);
				
		}
				
		this.btnGuardar.on('click', function(){
			this.guardar();
		}, this );
		
		this.btnEliminar.on('click',function(){	
			this.eliminar();
			
		},this);
	
		this.btnImprimir.on('click', function(){
			this.imprimir();
		}, this);
		
		this.btnAplicar.on('click', function(){
			this.aplicar();
		}, this );
				
	},
	inicializarRenders:function(){
		/*
		var colMod=this.gridDetalles.getColumnModel();
		
		var column=colMod.getColumnById("colConteo");
		column.renderer=function(val){
			return Ext.util.Format.cantidadConSeparadorDeMiles(val);
		};	
		
		var column=colMod.getColumnById("colStock");
		column.renderer=function(val){
			return Ext.util.Format.cantidadConSeparadorDeMiles(val);
		};	
		
		var column=colMod.getColumnById("colDiferencia");
		column.renderer=function(val){
			return Ext.util.Format.cantidadConSeparadorDeMiles(val);
		};		*/	
	},
	initComponent: function() {
		formInventarios.superclass.initComponent.call(this);
		
		this.txtStatus.setValue=function(value){        	
        	Ext.form.TextField.prototype.setValue.apply(this,arguments);
        	this.fireEvent('cambioDeStatus',{status:value});
		};
		
		 this.txtIdInventario.setValue=function(value){
			Ext.form.TextField.prototype.setValue.apply(this,arguments);
        	this.fireEvent('cambioDeId',{id:value});
			
        };
		
		this.inicializarStores();
		this.inicializarEvents();
		this.inicializarRenders();
	},
	aceptaProducto:function(){
		if(this.cmbProducto.getValue != "" || this.id_producto > 0 ){
			//this.id_producto = 0;
			Ext.Ajax.request({
				scope: this,
				url: 'app.php/inventarios/obtenerproducto',
				params: {
					ID: this.id_producto,
					Descripcion: this.cmbProducto.getValue()
				},
				success: function(data, options){
					var respuesta = Ext.decode(data.responseText);
					
					if(respuesta.success==true){
						this.id_producto = respuesta.data[0].id_producto;
						//this.cmbProducto.setValue(respuesta.data[0].id_producto);
						this.cmbProducto.setRawValue(respuesta.data[0].descripcion);
						this.txtStock.setValue(miErpWeb.formatearMoneda(respuesta.data[0].stock));
												
						this.calcularConcepto(0,0);
						
						this.txtConteo.focus(true,100);
						// this.id_producto = 0;
						} else {
							Ext.Msg.alert('Aviso', 'El Producto no existe, verifique por favor.', function(){
							this.id_producto = 0;	
							this.cmbProducto.focus(true, 0);
						}, this);
						
					}					
				}
			});
		}
	},
	calcularConcepto:function(conteo,stock){
		var diferencia = 0.000000;
				
		diferencia = conteo - stock;
			
		this.txtDiferencia.setValue(miErpWeb.formatearMoneda(diferencia));	
	},
	renderMoneda:function(val){
		if (val<0){
			return "-$" + Ext.util.Format.monedaConSeparadorDeMiles(val*-1);
		}else{
			return "$" + Ext.util.Format.monedaConSeparadorDeMiles(val);
		}
		
	},
	cargarDatos:function(data){
		if (data.Inventario==undefined ){
			Ext.Msg.show({
				   title:'Error ',
				   msg: 'Error en los datos del inventario fisico',
				   buttons: Ext.Msg.OK,				   				   
				   icon: Ext.MessageBox.WARNING
				});
			// miErpWeb.tabContainer.remove(this);	
			
			return;
		}
		var inventario=data.Inventario;
		
		var form=this.frmMain.getForm();		
        // form.setValues(movimiento);
		this.txtIdInventario.setValue(inventario.id_inventario);
        var fechaInv=inventario.fecha_inventario;
	
		var dt = Date.parseDate(fechaInv, "d/m/Y H:i:s");
	       
        this.txtFecha.setValue(dt);
        this.txtHora.setValue(dt.format('H:i:s A'));
		this.txtFolio.setValue(inventario.folio_inventario);
		this.txtConceptoInventario.setValue(inventario.concepto_inventario);
	

		
		
		if (inventario.id_inventario==0){
			this.cmbSerie.store.baseParams.id_empresa=inventario.id_empresa;		
			this.cmbSerie.store.baseParams.id_sucursal=inventario.id_sucursal;	
			this.cmbSerie.store.on('load',this.cargarPrimerFolio,this);	
			this.cmbSerie.store.load();
			
		}else{/*	SI LA FACTURA YA EXISTE EN EL SERVIDOR, SE ESTABLECE UN NUEVO TITULO Y EL ICONO DEL TAB			*/
			var series={
				id_serie:inventario.id_serie,
				nombre_serie:inventario.serie_inventario
			};
			this.cmbSerie.store.loadData({data:series});
			this.cmbSerie.setValue(series.id_serie);
			this.cmbSerie.setDisabled(true);			
			
			this.txtFecha.setDisabled(true);
			this.txtHora.setDisabled(true);
			this.txtFolio.setDisabled(true);
			
			
			this.btnImprimir.setDisabled(false);
			this.btnAplicar.setDisabled(false);
			
			if(inventario.aplicado==1){
				this.btnGuardar.setDisabled(true);
				this.btnEliminar.setDisabled(true);
				this.btnAplicar.setDisabled(true);
			}
				
			
			this.setTitle(inventario.id_inventario+"-"+inventario.concepto_inventario);
						
		}
					
		//Cargar detalles
		var detalles=data.Detalles;
        if(detalles!=undefined){			
            this.gridDetalles.store.loadData({
                data:detalles
            });
            
        }	

		this.el.unmask();	
	},
	cargarPrimerFolio:function(){			
		this.cmbSerie.store.removeListener('load',this.cargarPrimerFolio,this);
		var primerRecord=this.cmbSerie.store.getAt(0);			
		this.cmbSerie.setValue(primerRecord.data.id_serie);

		this.txtFolio.setValue(primerRecord.data.foliosig);
		
	},
	guardar:function(){
		if (this.frmMain.getForm().isValid()){
			var conceptos=gridToJson(this.gridDetalles);
			var fecha = this.txtFecha.getValue();
			fecha=fecha.format('Y-m-d');   
;   
			var params={};
			//params['Movimiento[id_empresa]'] = this.txtIdMovimientoAlmacen.getValue();
			params['Inventario[id_empresa]'] = miErpWeb.Empresa[0].id_empresa;
			params['Inventario[id_sucursal]'] = miErpWeb.Sucursal[0].id_sucursal;
			params['Inventario[id_almacen]'] = miErpWeb.Almacen[0].id_almacen;
			params['Inventario[id_inventario]'] = this.txtIdInventario.getValue();
			params['Inventario[id_serie]'] = this.cmbSerie.getValue();
			params['Inventario[nombre_serie]'] = this.cmbSerie.getRawValue();
			params['Inventario[folio_inventario]'] = this.txtFolio.getValue();
			params['Inventario[fecha]'] = fecha; 
			params['Inventario[hora]'] =this.txtHora.getValue();
			params['Inventario[concepto_inventario]'] = this.txtConceptoInventario.getValue();
			params['Inventario[status]'] = this.txtStatus.getValue();

			params['Conceptos']=conceptos;
			
			this.el.mask('Guardando...');
			this.frmMain.getForm().submit({
				params:params,
				scope:this,
				url:'app.php/inventarios/save',
				success:function(){
					this.el.unmask();
				},
				failure:function(form, action){
					switch (action.failureType) {
		            case Ext.form.Action.CLIENT_INVALID:		                
		                msg="Favor de revisar los campos marcados";
		                icon=Ext.MessageBox.WARNING;
		                break;
		            case Ext.form.Action.CONNECT_FAILURE:		                
		                msg="Error en la comunicación ajax, intente de nuevo";
		                icon=Ext.MessageBox.ERROR;
		                break;
		            case Ext.form.Action.SERVER_INVALID:
		                icon=Ext.MessageBox.ERROR;
		                msg=action.result.msg;
					}
					Ext.Msg.show({
					   title:'Error',
					   msg: msg,
					   buttons: Ext.Msg.OK,						  						   
					   icon: icon
					});
					}
				});
				
			
		}else{
			return;
			
		}	
		
		
	},
	getParamsImprimir:function(){
		return {
			IDInv:this.txtIdInventario.getValue()
		};
	},
	imprimir:function(){
		var params=this.getParamsImprimir();			
		Ext.Ajax.request({
		params: params,
		   url: 'app.php/inventarios/generarreporteinventario',
		   success: function(response, opts){
				//Solicita el PDF
				var obj = Ext.decode(response.responseText);
				if (!obj.success){	//Prosegir solo en caso de exito
					return;
				}
				var identificador=obj.data.identificador;
				window.open("app.php/inventarios/getpdfinventario?identificador="+identificador,'rep_inv',"height=600,width=800");							
			},
		   failure: function(){
				alert("El servidor ha respondido con un mensaje de error");
			}						   
		   
		});
	},
	eliminar:function(btn){
		switch(btn){	//ESTE SWITCH ES USADO PARA ANALIZAR LO QUE TRATA DE HACER EL USUARIO, LA PRIERA VEZ DEBE ENTRAR A default:
    	case 'no':
    		return;
    	break;
    	case 'yes':
    		this.eliminar('borrar');
    		return;
    		break;
    	case 'borrar':
    		break;		//SALE DEL SWITCH Y SIGUE EJECUTANDOSE LA FUNCI�N
    	case undefined:	//AQUI ENTRA LA PRIMERA VEZ
    	case false:    		
    	default:
    		var me=this;    		
    		Ext.Msg.show({
 			   title:'Confirme por favor',
 			   msg: "¿Desea borrar el movimiento?",
 			   buttons: Ext.Msg.YESNO,
 			   fn: function(btn){	    				
    				me.eliminar(btn);
    			},
 			   scope:this,
 			   icon: Ext.MessageBox.QUESTION
 			});
    		return;
		} 
		this.el.mask(mew.mensajeDeEspera);
		Ext.Ajax.request({
			params: { id_inventario: this.txtIdInventario.getValue() },
			scope:this,
		   	url: 'app.php/movimientosalmacen/eliminar',
		   	success: function(response,options){	
				var respuesta=Ext.decode(response.responseText);
				if (respuesta.success==false){
					this.el.unmask();
					return;
				}
				
				this.fireEvent('eliminado',options.params.id_movimiento);
				MainContainer.tabContainer.remove(this);
		   	},
		   	failure: function(){
		   		this.el.unmask();
		   	}		   
		});
	},
	aplicar:function(btn){
		switch(btn){	//ESTE SWITCH ES USADO PARA ANALIZAR LO QUE TRATA DE HACER EL USUARIO, LA PRIERA VEZ DEBE ENTRAR A default:
    	case 'no':
    		return;
    	break;
    	case 'yes':
    		this.aplicar('aplicar');
    		return;
    		break;
    	case 'aplicar':
    		break;		//SALE DEL SWITCH Y SIGUE EJECUTANDOSE LA FUNCI�N
    	case undefined:	//AQUI ENTRA LA PRIMERA VEZ
    	case false:    		
    	default:
    		var me=this;    		
    		Ext.Msg.show({
 			   title:'Confirme por favor',
 			   msg: "¿Desea aplicar el inventario?, se generaran los movimientos de ajuste.",
 			   buttons: Ext.Msg.YESNO,
 			   fn: function(btn){	    				
    				me.aplicar(btn);
    			},
 			   scope:this,
 			   icon: Ext.MessageBox.QUESTION
 			});
    		return;
		} 	
		this.el.mask(mew.mensajeDeEspera);
		Ext.Ajax.request({
			params: { id_inventario: this.txtIdInventario.getValue() },
			scope:this,
		   	url: 'app.php/inventarios/aplicar',
		   	success: function(response,options){	
				var respuesta=Ext.decode(response.responseText);
				if (respuesta.success==false){
					this.el.unmask();
					return;
				}	
				this.el.unmask();
				this.btnAplicar.setDisabled(true);
				this.btnGuardar.setDisabled(true);
				this.btnEliminar.setDisabled(true);
		   	},
		   	failure: function(){
		   		this.el.unmask();
		   	}		   
		});
		// this.el.unmask();
	},
	listeners:{
    	activate:function(){
			
    		if (this.activado==true){
    			return;
    		}
    		this.activado=true;
    	
			if (this.idValue!=undefined && this.idValue!=0){
    			this.txtIdInventario.setValue(this.idValue);
				//this.el.mask(mfw.mensajeDeEspera);    			
    		}
                          
			this.frmMain.load({
				params:{idInv:this.idValue,
						id_empresa:miErpWeb.Empresa[0].id_empresa,
						id_sucursal:miErpWeb.Sucursal[0].id_sucursal,
						id_almacen:miErpWeb.Almacen[0].id_almacen				
				},
				url:'app.php/inventarios/obtenerinventario'
			});
			
			return false;
					
    	},
    	cambioDeNombre:function(nombre){
    		this.setTitle(Ext.util.Format.ellipsis(this.idValue+'-'+nombre,25,true));
		},
    	cambioDeId:function(params){
    		var id=params.id;
    		this.idValue=id;
    		if (id==0){
				this.setIconClass(Ext.ux.TDGi.iconMgr.getIcon(this.iconMaster+"_add"));
			}else if (id>0){
				this.setIconClass(Ext.ux.TDGi.iconMgr.getIcon(this.iconMaster+"_edit"));				
			}
					
    	}
    }
});
Ext.reg('formInventarios', formInventarios);