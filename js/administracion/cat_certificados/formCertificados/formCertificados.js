/*
 * File: formCertificados.js
 * Date: Thu Apr 14 2016 19:41:45 GMT-0600 (Hora verano, Montañas (México))
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

formCertificados = Ext.extend(formCertificadosUi, {
	configurarBotones:function(){			
		
		this.txtCertificado.buttonCfg= { text: '',icon:"images/iconos/folder-upload.png"};
		this.txtCertificado.regex=/(\.cer)|(\.CER)/;
		this.txtCertificado.regexText= 'Solo se admiten certificados *.cer';

		 
		this.txtLlave.buttonCfg= { text: '',icon:"images/iconos/folder-upload.png"};
		this.txtLlave.regex=/(\.key)|(\.KEY)/;
		this.txtLlave.regexText= 'Solo se admiten archivos *.key';		
	},
	configurarToolBar(){
		this.btnGuardar.on('click',function(){	
			this.hacerSubmit();
			
		},this);
		
		this.btnEliminar.on('click',function(){	
			this.eliminar();
			
		},this);
		
		this.btnDesactivar.on('click',function(){	
			this.cancelar();
			
		},this);
		
	},
	inicializarEventos: function(){
		
		this.on('cambioDeStatus',function(params){			
			var status=params.status;
			switch(status){
				case 'I':
					this.btnDesactivar.setIcon("images/iconos/"+this.iconMaster+"_green.png");
					this.btnDesactivar.setText("Activar");
				break;
				case 'A':
					this.btnDesactivar.setIcon("images/iconos/"+this.iconMaster+"_red.png");
					this.btnDesactivar.setText("Desactivar");
				break;
			}
		},this);
		
		this.on('cambioDeId',function(params){	
			var id=params.id;
			if (id==0){
				this.btnGuardar.setIcon('images/iconos/'+this.iconMaster+'_add.png');
			}else if (id>0){
				this.btnEliminar.setDisabled(false);
				this.btnDesactivar.setDisabled(false);
				this.btnGuardar.setIcon('images/iconos/'+this.iconMaster+'_edit.png');
			}			
		},this);
	},
    initComponent: function() {
        formCertificados.superclass.initComponent.call(this);
		this.configurarBotones();
		this.configurarToolBar();
		this.inicializarEventos();
		
		
    },
	cancelar:function(){
		this.el.mask(mew.mensajeDeEspera);
		Ext.Ajax.request({
			params: { 
				id_certificado: this.txtIdCertificado.getValue(),
				status:this.txtStatus.getValue()
			},
			scope:this,
		   	url: 'app.php/certificados/cambiarstatus',
		   	success: function(response, options){
				this.el.unmask();			
				var respuesta=Ext.decode(response.responseText);
				if (respuesta.success==true){
						if (respuesta.data.status!=undefined){
							this.txtStatus.setValue(respuesta.data.status);
						}
				}
		   	},
		   	failure: function(){
		   		this.el.unmask();
		   	}		   
		});
	},
	hacerSubmit:function(){
		
		var form = this.getForm();
		// if (form.params==undefined){
			// form.params={};
		// }
		// form.params.acccion='subir';
		this.el.mask(mew.mensajeDeEspera);
		form.submit({
			url:'app.php/certificados/guardar',
			// method:'GET',
			scope:this,
			success:function(){
				this.el.unmask();
				
				
			},
			failure:function(){ 	// ? ? m�sica maestro ? !  
				this.el.unmask();   //	? con cari�o!
			}	
		});
	},
	eliminar:function(btn){
		switch(btn){	//ESTE SWITCH ES USADO PARA ANALIZAR LO QUE TRATA DE HACER EL USUARIO, LA PRIERA VEZ DEBE ENTRAR A default:
    	case 'no':
    		return;
    	break;
    	case 'yes':
    		this.eliminar('borrar');
    		return;
    		break;
    	case 'borrar':
    		break;		//SALE DEL SWITCH Y SIGUE EJECUTANDOSE LA FUNCI�N
    	case undefined:	//AQUI ENTRA LA PRIMERA VEZ
    	case false:    		
    	default:
    		var me=this;    		
    		Ext.Msg.show({
 			   title:'Confirme por favor',
 			   msg: "¿Desea borrar el Certificado?",
 			   buttons: Ext.Msg.YESNO,
 			   fn: function(btn){	    				
    				me.eliminar(btn);
    			},
 			   scope:this,
 			   icon: Ext.MessageBox.QUESTION
 			});
    		return;
		} 
		this.el.mask(mew.mensajeDeEspera);
		Ext.Ajax.request({
			params: { id_certificado: this.txtIdCertificado.getValue() },
			scope:this,
		   	url: 'app.php/certificados/eliminar',
		   	success: function(response,options){	
				var respuesta=Ext.decode(response.responseText);
				if (respuesta.success==false){
					this.el.unmask();
					return;
				}
				
				this.fireEvent('eliminado',options.params.id_producto);
				MainContainer.tabContainer.remove(this);
		   	},
		   	failure: function(){
		   		this.el.unmask();
		   	}		   
		});
	},
	load:function(){
		var params={idCer:this.txtIdCertificado.getValue()};
		this.el.mask(mew.mensajeDeEspera);
		this.getForm().load({
			params:params,
			url:'app.php/certificados/obtenercertificado',
			scope:this,
			success:function(form ,action){
				this.el.unmask();				
			},
			failure:function(){
				MainContainer.remove(this);				
			}
		});
			
	},
	listeners:{
    	activate:function(){
    		if (this.activado==true){
    			return;
    		}
    		this.activado=true;
    		
    		if (this.idValue!=undefined && this.idValue!=0){
    			this.txtIdCertificado.setValue(this.idValue);
    			this.load();
			} 
				
					
    	},
    	actioncomplete:function(form,action){
    		var respuesta=Ext.decode(action.response.responseText);			
			if (respuesta.success==true){
				var producto = respuesta.data.Producto;
				var unidades=respuesta.data.Unidades;
				var lineas=respuesta.data.Lineas;
				if (unidades!=undefined){
					this.cmbUnidades.store.loadData({data:unidades});
				}   
				if (lineas!=undefined){
					this.cmbLineas.store.loadData({data:lineas});
				}   
								
				producto.codigo=miErpWeb.formatearTexto(producto.codigo);
				producto.codigo_barras=miErpWeb.formatearTexto(producto.codigo_barras);
				producto.descripcion=miErpWeb.formatearTexto(producto.descripcion);
				producto.detalles=miErpWeb.formatearTexto(producto.detalles);
				producto.precio_venta=miErpWeb.formatearMoneda(producto.precio_venta);
				producto.precio_compra=miErpWeb.formatearMoneda(producto.precio_compra);
				// producto.ultimo_costo=miErpWeb.monedaConSeparadorDeMiles(producto.ultimo_costo);
				// producto.costo_promedio=miErpWeb.monedaConSeparadorDeMiles(producto.costo_promedio);
				form.setValues(producto);
				
			}
					
    	},
    	cambioDeNombre:function(nombre){
    		this.setTitle(Ext.util.Format.ellipsis(nombre,25,true));
		},
    	cambioDeId:function(params){
    		var id=params.id;
    		this.idValue=id;
    		if (id==0){
				this.setIconClass(Ext.ux.TDGi.iconMgr.getIcon(this.iconMaster+"_add"));
			}else if (id>0){
				this.setIconClass(Ext.ux.TDGi.iconMgr.getIcon(this.iconMaster+"_edit"));				
			}
					
    	}
    }
});
Ext.reg('formCertificados', formCertificados);