/*
 * File: formHorarios.js
 * Date: Thu Feb 02 2017 23:47:25 GMT-0700 (Hora estándar Montañas (México))
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */
Ext.ns('miErpWeb');
formHorarios = Ext.extend(formHorariosUi, {
	configurarToolBar(){
		this.btnGuardar.on('click',function(){	
			this.guardar();
			
		},this);
		
		this.btnEliminar.on('click',function(){	
			this.eliminar();
			
		},this);
		
		this.btnDesactivar.on('click',function(){	
			this.cancelar();
		},this);
		
	},
	inicializarEventos: function(){
		
		this.frmMain.on('actioncomplete',function(form,action){
			 if (action.result.success){
				 this.cargarDatos(action.result.data);
				 
			 }else{				
				return false;
			}			
		}, this);	
		
		this.on('cambioDeStatus',function(params){			
			var status=params.status;
			switch(status){
				case 'I':
					this.btnDesactivar.setIcon("images/iconos/"+this.iconMaster+"_activos.png");
					this.btnDesactivar.setText("Activar");
				break;
				case 'A':
					this.btnDesactivar.setIcon("images/iconos/"+this.iconMaster+"_todos.png");
					this.btnDesactivar.setText("Desactivar");
				break;
			}
		},this);
		
		this.on('cambioDeId',function(params){	
			var id=params.id;
			if (id==0){
				this.btnGuardar.setIcon('images/iconos/'+this.iconMaster+'_add.png');
			}else if (id>0){
				this.btnEliminar.setDisabled(false);
				this.btnDesactivar.setDisabled(false);
				this.btnGuardar.setIcon('images/iconos/'+this.iconMaster+'_edit.png');
			}			
		},this);
		
		
	},
    initComponent: function() {
        formHorarios.superclass.initComponent.call(this);
		
		this.txtStatus.setValue=function(value){        	
        	Ext.form.TextField.prototype.setValue.apply(this,arguments);
        	this.fireEvent('cambioDeStatus',{status:value});
		};
		
		this.txtIdHorario.setValue=function(value){
			Ext.form.TextField.prototype.setValue.apply(this,arguments);
        	this.fireEvent('cambioDeId',{id:value});
		};
		
		this.txtHoraInicio.setValue=function(value){
			value=miErpWeb.formatearTexto(value);
        	Ext.form.TextField.prototype.setValue.apply(this,arguments);
        	this.fireEvent('cambioDeNombre',value);
		};
		
		
		
		
		
		this.configurarToolBar();
		this.inicializarEventos();
    },
	cargarDatos:function(data){
		if (data.Horario==undefined ){
			Ext.Msg.show({
				   title:'Error ',
				   msg: 'Error en los datos del horario',
				   buttons: Ext.Msg.OK,				   				   
				   icon: Ext.MessageBox.WARNING
				});
			// miErpWeb.tabContainer.remove(this);	
			
			return;
		}
		var form=this.frmMain.getForm();			
		var horario = data.Horario;
			
		var horini=horario.hora_inicio;
		var horfin=horario.hora_fin;
				
		var dt = Date.parseDate(horini, "d/m/Y H:i:s");
		var dt2 = Date.parseDate(horfin, "d/m/Y H:i:s");   
		
		//form.setValues(horario);
		this.txtIdHorario.setValue(horario.id_horario);
		this.txtHoraInicio.setValue(dt.format('H:i:s A'));
		this.txtHoraFin.setValue(dt2.format('H:i:s A'));
		this.txtStatus.setValue(horario.status);
		
		if (horario.id_horario > 0){
			
			var titulo = horario.id_horario+"-("+dt.format('H:i:s A')+"-"+dt2.format('H:i:s A')+")"
			this.setTitle(titulo);
						
		}

		this.el.unmask();	
	},
	cancelar:function(){
		this.el.mask(mew.mensajeDeEspera);
		Ext.Ajax.request({
			params: { 
				id_horario: this.txtIdHorario.getValue(),
				status:this.txtStatus.getValue()
			},
			scope:this,
		   	url: 'app.php/horarios/cambiarstatus',
		   	success: function(response, options){
				this.el.unmask();			
				var respuesta=Ext.decode(response.responseText);
				if (respuesta.success==true){
						if (respuesta.data.status!=undefined){
							this.txtStatus.setValue(respuesta.data.status);
						}
				}
		   	},
		   	failure: function(){
		   		this.el.unmask();
		   	}		   
		});
	},
	/*hacerSubmit:function(){
		this.el.mask(mew.mensajeDeEspera);
		this.getForm().submit({
			url:'app.php/horarios/guardar',
			scope:this,
			success:function(){
				this.el.unmask();
				
				
			},
			failure:function(){ 	// ? ? m�sica maestro ? !  
				this.el.unmask();   //	? con cari�o!
			}	
		});
	},*/
	guardar:function(){
		if (this.frmMain.getForm().isValid()){
			
			var fecha = new Date();
			fecha=fecha.format('Y-m-d');   
			var params={};
			params['Horario[id_horario]'] = this.txtIdHorario.getValue();		
			params['Horario[fecha]'] = fecha; 
			params['Horario[hora_inicio]'] =this.txtHoraInicio.getValue();
			params['Horario[hora_fin]'] =this.txtHoraFin.getValue();
			params['Horario[status]'] = this.txtStatus.getValue();			

			this.el.mask('Guardando...');
			this.frmMain.getForm().submit({
				params:params,
				scope:this,
				url:'app.php/horarios/guardar',
				success:function(){
					this.el.unmask();
				},
				failure:function(form, action){
					switch (action.failureType) {
		            case Ext.form.Action.CLIENT_INVALID:		                
		                msg="Favor de revisar los campos marcados";
		                icon=Ext.MessageBox.WARNING;
		                break;
		            case Ext.form.Action.CONNECT_FAILURE:		                
		                msg="Error en la comunicación ajax, intente de nuevo";
		                icon=Ext.MessageBox.ERROR;
		                break;
		            case Ext.form.Action.SERVER_INVALID:
		                icon=Ext.MessageBox.ERROR;
		                msg=action.result.msg;
					}
					Ext.Msg.show({
					   title:'Error',
					   msg: msg,
					   buttons: Ext.Msg.OK,						  						   
					   icon: icon
					});
					this.el.unmask();
					}

				});
				
			
		}else{
			return;
			
		}	
		
		
	},
	eliminar:function(btn){
		switch(btn){	//ESTE SWITCH ES USADO PARA ANALIZAR LO QUE TRATA DE HACER EL USUARIO, LA PRIERA VEZ DEBE ENTRAR A default:
    	case 'no':
    		return;
    	break;
    	case 'yes':
    		this.eliminar('borrar');
    		return;
    		break;
    	case 'borrar':
    		break;		//SALE DEL SWITCH Y SIGUE EJECUTANDOSE LA FUNCI�N
    	case undefined:	//AQUI ENTRA LA PRIMERA VEZ
    	case false:    		
    	default:
    		var me=this;    		
    		Ext.Msg.show({
 			   title:'Confirme por favor',
 			   msg: "¿Desea borrar el Horario?",
 			   buttons: Ext.Msg.YESNO,
 			   fn: function(btn){	    				
    				me.eliminar(btn);
    			},
 			   scope:this,
 			   icon: Ext.MessageBox.QUESTION
 			});
    		return;
		} 
		this.el.mask(mew.mensajeDeEspera);
		Ext.Ajax.request({
			params: { id_horario: this.txtIdHorario.getValue() },
			scope:this,
		   	url: 'app.php/horarios/eliminar',
		   	success: function(response,options){	
				var respuesta=Ext.decode(response.responseText);
				if (respuesta.success==false){
					this.el.unmask();
					return;
				}
				
				this.fireEvent('eliminado',options.params.id_horario);
				MainContainer.tabContainer.remove(this);
		   	},
		   	failure: function(){
		   		this.el.unmask();
		   	}		   
		});
	},
	load:function(){
		var params={idHor:this.txtIdHorario.getValue()};
		this.el.mask(mew.mensajeDeEspera);
		this.frmMain.getForm().load({
			params:params,
			url:'app.php/horarios/obtenerhorario',
			scope:this,
			success:function(form ,action){
				this.el.unmask();
			},
			failure:function(){
				MainContainer.remove(this);	
			}
		});
			
	},
	listeners:{
    	activate:function(){
			
    		if (this.activado==true){
    			return;
    		}
    		this.activado=true;
    	
			if (this.idValue!=undefined && this.idValue!=0){
    			this.txtIdHorario.setValue(this.idValue);				  			
    		}
                          
			this.frmMain.load({
				params:{idHor:this.idValue,
						id_empresa:miErpWeb.Empresa[0].id_empresa,
						id_sucursal:miErpWeb.Sucursal[0].id_sucursal,
						id_almacen:miErpWeb.Almacen[0].id_almacen},
				url:'app.php/horarios/obtenerhorario'
			});
			
			return false;
					
    	},
    	
    	cambioDeNombre:function(nombre){
			//this.setTitle(Ext.util.Format.ellipsis(this.idValue+'-'+nombre,25,true));
		},
    	cambioDeId:function(params){
    		var id=params.id;
    		this.idValue=id;
    		if (id==0){
				this.setIconClass(Ext.ux.TDGi.iconMgr.getIcon(this.iconMaster+"_add"));
			}else if (id>0){
				this.setIconClass(Ext.ux.TDGi.iconMgr.getIcon(this.iconMaster+"_edit"));				
			}
					
    	}
    }
});
Ext.reg('formHorarios', formHorarios);