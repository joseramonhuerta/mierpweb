/*
 * File: formClientes.js
 * Date: Sat Apr 02 2016 19:39:25 GMT-0700 (Hora estándar Montañas (México))
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */
Ext.ns('miErpWeb');
// Ext.ns('mew');
// Ext.ns('miErpWeb.parametros');
formClientes = Ext.extend(formClientesUi, {
	tplCatCiudades: new Ext.XTemplate(
		'<tpl for="."><div class="search-item">',
			'<h3 style="min-width:0;">{nom_ciu}</h3>',
			'<div>',
				'<div style="width:140px; float:left;">{nom_est}</div>',
				'<div style="width:100px; float:right; text-align:right;">',
					'<img src="images/banderas/{[miErpWeb.escape(values.img_pai)]}" align="absmiddle"/>&nbsp;{nom_pai:ellipsis(32)}',
				'</div>',
				'<div style="clear:both;"></div>',
			'</div>',
		'</div></tpl>'
	),
    initComponent: function() {
		formClientes.superclass.initComponent.call(this);
		
		 this.txtStatus.setValue=function(value){        	
        	Ext.form.TextField.prototype.setValue.apply(this,arguments);
        	this.fireEvent('cambioDeStatus',{status:value});
        };
		
		 this.txtIdCliente.setValue=function(value){
			Ext.form.TextField.prototype.setValue.apply(this,arguments);
        	// this.cambioDeId({id:value});
			this.fireEvent('cambioDeId',{id:value});
			
        };
        this.txtNombreFiscal.setValue=function(value){
			value=miErpWeb.formatearTexto(value);
        	Ext.form.TextField.prototype.setValue.apply(this,arguments);
        	//this.cambioDeNombre(value);
			this.fireEvent('cambioDeNombre',value);
        }; 
			
		this.cmbTipoCliente.store = new miErpWeb.storeTipoCliente();        
        var data=new Array(
        		{id:'F',nombre:miErpWeb.formatearTexto('PERSONA FISICA')},
        		{id:'M',nombre:miErpWeb.formatearTexto('PERSONA MORAL')},
        		{id:'G',nombre:miErpWeb.formatearTexto('PUBLICO EN GENERAL')},
				{id:'E',nombre:miErpWeb.formatearTexto('EXTRANJERO')}
        );
		 this.cmbTipoCliente.store.loadData({data:data});
		 
		this.cmbEstilista.store = new miErpWeb.storeEstilista();        
        var data=new Array(
        		{id:'0',nombre:miErpWeb.formatearTexto('NO')},
        		{id:'1',nombre:miErpWeb.formatearTexto('SI')}
        );		
		this.cmbEstilista.store.loadData({data:data}); 
		this.cmbEstilista.setValue(0);
		
		this.cmbForaneo.store = new miErpWeb.storeForaneo();        
        var data=new Array(
        		{id:'0',nombre:miErpWeb.formatearTexto('NO')},
        		{id:'1',nombre:miErpWeb.formatearTexto('SI')}
        );		
		this.cmbForaneo.store.loadData({data:data}); 		
		this.cmbForaneo.setValue(0);
		
		 
		this.cmbCiudades.tpl=tplCatCiudades;
		
		this.cmbCiudades.store = new miErpWeb.storeClientesCiudades();

		this.cmbListaPrecio.store = new miErpWeb.storeClientesListaPrecio();
		this.cmbListaPrecio.store.load();
		
		this.seleccionarCiudadDefault();
		
		this.configurarToolBar();
		
		this.inicializarEventos();
				
    },
	configurarToolBar(){
		this.btnGuardar.on('click',function(){	
			this.hacerSubmit();
			
		},this);
		
		this.btnEliminar.on('click',function(){	
			this.eliminar();
			
		},this);
		
		this.btnDesactivar.on('click',function(){	
			this.cancelar();
			
		},this);
		
	},
	inicializarEventos(){
		var me = this;
		this.cmbCiudades.on('select',function(combo, record, index){	
			var estado={
                    id:record.get('id_est'),
                    nombre:record.get('nom_est')
                };
                var pais={
                  id:record.get('id_pai'),
                  nombre:record.get('nom_pai')
                };
                var params={
                    estado:estado,
                    pais:pais
                };
                this.ciudadSeleccionada(params);
			
		},this);
		
		this.cmbCiudades.on('beforequery',function(qe){	
			delete qe.combo.lastQuery;
			
		},this);
		
		
		this.cmbCiudades.on('keypress',function(t, e){	
			if (e['altKey'] || (e['shiftKey'] && e.getKey() == 34) || e.getKey() == 39) {
                    e.stopEvent();
                }			
		},this);
		
		this.cmbCiudades.on('keyup',function(t, e){	
				 if (e.getKey() == 114 && e['ctrlKey'] && !e['altKey']) {
                    if(this.disabled){
						return;
					}
                    this.expand();
                    this.el.focus();
                    if(this.getRawValue())	this.doQuery(this.getRawValue());
                    else this.doQuery('@ALL001X23');
                    this.el.focus();
                }	
		},this);
		
		this.cmbCiudades.on('blur',function(params,b,c,d){              
            val=params.getValue();            
            if (!isInt(val)){   //LA CIUDAD NO ESTÁ EN LA LISTA
                this.idEstado=0;
				 this.idPais=0;
            }
            
        },this);
		
		this.on('cambioDeStatus',function(params){			
			var status=params.status;
			switch(status){
				case 'I':
					this.btnDesactivar.setIcon("images/iconos/"+this.iconMaster+"_activos.png");
					this.btnDesactivar.setText("Activar");
				break;
				case 'A':
					this.btnDesactivar.setIcon("images/iconos/"+this.iconMaster+"_todos.png");
					this.btnDesactivar.setText("Desactivar");
				break;
			}
		},this);
		
		this.on('cambioDeId',function(params){	
			var id=params.id;
			if (id==0){
				this.btnGuardar.setIcon('images/iconos/'+this.iconMaster+'_add.png');
			}else if (id>0){
				this.btnEliminar.setDisabled(false);
				this.btnDesactivar.setDisabled(false);
				this.btnGuardar.setIcon('images/iconos/'+this.iconMaster+'_edit.png');
			}			
		},this);

		this.cmbListaPrecio.onTriggerClick = function(a, e){
			if(e){
				if(e.getAttribute('class').indexOf('x-form-clear-trigger') > -1){
					if(this.isExpanded()){
						this.collapse();
						this.el.focus();
					}
					if(!Ext.isEmpty(me.cmbListaPrecio.getValue())){
						this.reset();
						
						// this.deshabilitarBtns(true);
						// this.cntActivo.setVisible(false);
						// this.spExcel.setVisible(false);
						//this.reloadGrid(null, 0);
					}
				}else{
					if(this.readOnly || this.disabled){
						return;
					}
					if(this.isExpanded()){
						this.collapse();
						this.el.focus();
					}else {
						this.onFocus({});
						if(this.triggerAction == 'all') {
							this.doQuery(this.allQuery, true);
						} else {
							this.doQuery(this.getRawValue());
						}
						this.el.focus();
					}
				} 
			}
		};
		
	},
	cancelar:function(){
		this.el.mask(mew.mensajeDeEspera);
		Ext.Ajax.request({
			params: { 
				id_cliente: this.txtIdCliente.getValue(),
				status:this.txtStatus.getValue()
			},
			scope:this,
		   	url: 'app.php/clientes/cambiarstatus',
		   	success: function(response, options){
				this.el.unmask();			
				var respuesta=Ext.decode(response.responseText);
				if (respuesta.success==true){
						if (respuesta.data.status!=undefined){
							this.txtStatus.setValue(respuesta.data.status);
						}
				}
		   	},
		   	failure: function(){
		   		this.el.unmask();
		   	}		   
		});
	},
	hacerSubmit:function(){
		this.el.mask(mew.mensajeDeEspera);
		this.getForm().submit({
			url:'app.php/clientes/guardar',
			scope:this,
			success:function(){
				this.el.unmask();
			},
			failure:function(){ 	// ? ? m�sica maestro ? !  
				this.el.unmask();   //	? con cari�o!
			}	
		});
	},
	eliminar:function(btn){
		switch(btn){	//ESTE SWITCH ES USADO PARA ANALIZAR LO QUE TRATA DE HACER EL USUARIO, LA PRIERA VEZ DEBE ENTRAR A default:
    	case 'no':
    		return;
    	break;
    	case 'yes':
    		this.eliminar('borrar');
    		return;
    		break;
    	case 'borrar':
    		break;		//SALE DEL SWITCH Y SIGUE EJECUTANDOSE LA FUNCI�N
    	case undefined:	//AQUI ENTRA LA PRIMERA VEZ
    	case false:    		
    	default:
    		var me=this;    		
    		Ext.Msg.show({
 			   title:'Confirme por favor',
 			   msg: "¿Desea borrar el Cliente?",
 			   buttons: Ext.Msg.YESNO,
 			   fn: function(btn){	    				
    				me.eliminar(btn);
    			},
 			   scope:this,
 			   icon: Ext.MessageBox.QUESTION
 			});
    		return;
		} 
		this.el.mask(mew.mensajeDeEspera);
		Ext.Ajax.request({
			params: { id_cliente: this.txtIdCliente.getValue() },
			scope:this,
		   	url: 'app.php/clientes/eliminar',
		   	success: function(response,options){	
				var respuesta=Ext.decode(response.responseText);
				if (respuesta.success==false){
					this.el.unmask();
					return;
				}
				
				this.fireEvent('eliminado',options.params.id_cliente);
				// miFacturaWeb.tabContainer.remove(this);
				 MainContainer.tabContainer.remove(this);
		   	},
		   	failure: function(){
		   		this.el.unmask();
		   	}		   
		});
	},
	load:function(){
		var params={idCli:this.txtIdCliente.getValue()};
		this.el.mask(mew.mensajeDeEspera);
		this.getForm().load({
			params:params,
			url:'app.php/clientes/obtenercliente',
			scope:this,
			success:function(form ,action){
				this.el.unmask();				
			},
			failure:function(){
				MainContainer.remove(this);				
			}
		});
			
	},
	seleccionarCiudadDefault:function(){
		var ciudad={
			id_ciu:miErpWeb.parametros.ciudad.id_ciu,
			nom_ciu:miErpWeb.parametros.ciudad.nom_ciu,
			nom_est:miErpWeb.parametros.ciudad.nom_est,
			id_est:miErpWeb.parametros.ciudad.id_est,
			nom_pai:miErpWeb.parametros.ciudad.nom_pai,
			id_pai:miErpWeb.parametros.ciudad.id_pai
		};

		this.cmbCiudades.store.loadData({data:ciudad});

		this.cmbCiudades.setValue(ciudad.id_ciu);
		// this.txtEstado.setValue(miErpWeb.formatearTexto(ciudad.nom_est));
		// this.txtPais.setValue(miErpWeb.formatearTexto(ciudad.nom_pai));

		var estado={
			id:ciudad.id_est,
			nombre:ciudad.nom_est
		};
		var pais={
		  id:ciudad.id_pai,
		  nombre:ciudad.nom_pai
		};
		var params={
			estado:estado,
			pais:pais
		};
		this.ciudadSeleccionada(params);
	},
	ciudadSeleccionada:function(params){
			this.txtIdEstado.setValue(params.estado.id);
            this.txtEstado.setValue(miErpWeb.formatearTexto(params.estado.nombre));
			
			this.txtIdPais.setValue(params.pais.id);
            this.txtPais.setValue(miErpWeb.formatearTexto(params.pais.nombre));

    },
	listeners:{
    	activate:function(){
    		if (this.activado==true){
    			return;
    		}
    		this.activado=true;
    		
    		if (this.idValue!=undefined && this.idValue!=0){
    			this.txtIdCliente.setValue(this.idValue);
    			this.load();
			} 
				
					
    	},
    	actioncomplete:function(form,action){
    		var respuesta=Ext.decode(action.response.responseText);			
			if (respuesta.success==true){
				var cliente = respuesta.data.Cliente;
				var ciudad=respuesta.data.Ciudad;
				var listaprecio=respuesta.data.ListaPrecios;
               
                this.cmbCiudades.store.loadData({data:ciudad});

                this.txtIdEstado.setValue(ciudad.id_est);
				this.txtEstado.setValue(miErpWeb.formatearTexto(ciudad.nom_est));
			
				this.txtIdPais.setValue(ciudad.id_pai);
				this.txtPais.setValue(miErpWeb.formatearTexto(ciudad.nom_pai));
				
				if (listaprecio!=undefined){
					this.cmbListaPrecio.store.loadData({data:listaprecio});
				}  
				
				cliente.nombre_comercial=miErpWeb.formatearTexto(cliente.nombre_comercial);
				cliente.calle=miErpWeb.formatearTexto(cliente.calle);
				cliente.numext=miErpWeb.formatearTexto(cliente.numext);
				cliente.numint=miErpWeb.formatearTexto(cliente.numint);
				cliente.colonia=miErpWeb.formatearTexto(cliente.colonia);
				cliente.localidad=miErpWeb.formatearTexto(cliente.localidad);
				cliente.nombre_contacto=miErpWeb.formatearTexto(cliente.nombre_contacto);
				cliente.email_contacto=miErpWeb.formatearCorreo(cliente.email_contacto);
				
				
				form.setValues(cliente);
				
				
			}
					
    	},
    	cambioDeNombre:function(nombre){
    		this.setTitle(Ext.util.Format.ellipsis(this.idValue+'-'+nombre,25,true));
		},
    	cambioDeId:function(params){
    		var id=params.id;
    		this.idValue=id;
    		if (id==0){
				this.setIconClass(Ext.ux.TDGi.iconMgr.getIcon(this.iconMaster+"_add"));
			}else if (id>0){
				this.setIconClass(Ext.ux.TDGi.iconMgr.getIcon(this.iconMaster+"_edit"));				
			}
					
    	}
    }
	
});
Ext.reg('formClientes', formClientes);